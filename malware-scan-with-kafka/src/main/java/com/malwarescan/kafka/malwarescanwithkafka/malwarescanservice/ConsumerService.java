package com.malwarescan.kafka.malwarescanwithkafka.malwarescanservice;

import com.malwarescan.kafka.malwarescanwithkafka.utils.AppConstants;
import com.malwarescan.kafka.malwarescanwithkafka.utils.FileReader;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Service;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;

@Service
public class ConsumerService {

    private static final Logger LOGGER = LoggerFactory.getLogger(ConsumerService.class);
    private FileReader fileReader;
    @KafkaListener(topics = AppConstants.TOPIC_NAME)
    public String consumeMssages(String urlDocument) throws IOException {
        LOGGER.info(String.format("Check messages received -> %s", urlDocument));
        ///implement url by reading the file name
         if(urlDocument!=null && !urlDocument.isEmpty() && urlDocument.contains(AppConstants.DOCUMENT_TYPE_PDF))
         {
             URL url = new URL(urlDocument);
             try (InputStream in = url.openStream()) {
                 Files.copy(in, Paths.get("resources/"+url.getFile().substring('/')), StandardCopyOption.REPLACE_EXISTING);
             } catch (IOException e) {
                 e.printStackTrace();
             }
            return FileReader.readFileFromClasspath(url.getFile().substring('/'));

         }
         return "No content found";
    }
}
