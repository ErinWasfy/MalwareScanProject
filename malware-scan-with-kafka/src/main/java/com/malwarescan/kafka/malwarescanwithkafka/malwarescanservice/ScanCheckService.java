package com.malwarescan.kafka.malwarescanwithkafka.malwarescanservice;


import com.malwarescan.kafka.malwarescanwithkafka.model.CheckEvent;
import com.malwarescan.kafka.malwarescanwithkafka.model.CheckResultEvent;
import com.malwarescan.kafka.malwarescanwithkafka.utils.AppConstants;
import org.springframework.stereotype.Service;
import xyz.capybara.clamav.ClamavClient;
import xyz.capybara.clamav.commands.scan.result.ScanResult;

import java.io.IOException;
import java.nio.file.Paths;
import java.util.UUID;

@Service
public class ScanCheckService {

    private final ClamavClient client;
    private CheckEvent event;
    private CheckResultEvent resultEvent;

    public ScanCheckService(ClamavClient client) {
        this.client = client;
    }

    public CheckResultEvent isFileInfected(String file) throws IOException {
        event=CheckEvent.builder().id(UUID.randomUUID().toString()).url(file).
                fileType(AppConstants.DOCUMENT_TYPE_PDF).build();
        resultEvent=CheckResultEvent.builder().name(Paths.get(file).getFileName().toString()).build();
        ScanResult res=client.scan(Paths.get(event.getUrl()));
        if(res instanceof ScanResult.OK)
        {
            resultEvent.setState(CheckResultEvent.StateEnum.OK);
            resultEvent.setDetails("this file has been detected and scanned successfully with no suspicious content followed by "+CheckEvent.HEADER_REQUESTER_SERVICE);
        }
        else if(res instanceof ScanResult.VirusFound)
        {
            resultEvent.setState(CheckResultEvent.StateEnum.SUSPICIOUS);
            resultEvent.setDetails("this file has been detected and scanned successfully with suspicious content");

        }
        return resultEvent;
    }
}
